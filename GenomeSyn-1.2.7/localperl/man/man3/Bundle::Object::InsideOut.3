.\" Automatically generated by Pod::Man 2.26 (Pod::Simple 3.23)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bundle::Object::InsideOut 3"
.TH Bundle::Object::InsideOut 3 "2013-10-04" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bundle::Object::InsideOut \- A bundle of modules for full Object::InsideOut support
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& perl \-MCPAN \-e "install Bundle::Object::InsideOut"
.Ve
.SH "CONTENTS"
.IX Header "CONTENTS"
Test::Harness 3.28              \- Used for module testing
.PP
Test::Simple 0.98               \- Used for module testing
.PP
Scalar::Util 1.32               \- Used by Object::InsideOut
.PP
Pod::Escapes 1.04               \- Used by Pod::Simple
.PP
Pod::Simple 3.28                \- Used by Test::Pod
.PP
Test::Pod 1.48                  \- Checks \s-1POD\s0 syntax
.PP
Devel::Symdump 2.10             \- Used by Pod::Coverage
.PP
File::Spec 3.40                 \- Used by Pod::Parser
.PP
Pod::Parser 1.61                \- Used by Pod::Coverage
.PP
Pod::Coverage 0.23              \- Used by Test::Pod::Coverage
.PP
Test::Pod::Coverage 1.08        \- Tests \s-1POD\s0 coverage
.PP
threads 1.89                    \- Support for threads
.PP
threads::shared 1.43            \- Support for sharing objects between threads
.PP
Want 0.21                       \- :lvalue accessor support
.PP
Data::Dumper 2.145              \- Object serialization support
.PP
Storable 2.45                   \- Object serialization support
.PP
Devel::StackTrace 1.30          \- Used by Exception::Class
.PP
Class::Data::Inheritable 0.08   \- Used by Exception::Class
.PP
Exception::Class 1.37           \- Error handling
.PP
Object::InsideOut 3.98          \- Inside-out object support
.PP
\&\s-1URI\s0 1.60                        \- Used by LWP::UserAgent
.PP
HTML::Tagset 3.20               \- Used by LWP::UserAgent
.PP
HTML::Parser 3.71               \- Used by LWP::UserAgent
.PP
LWP::UserAgent 6.05             \- Used by Math::Random::MT::Auto
.PP
Win32::API 0.75                 \- Used by Math::Random::MT::Auto (Win \s-1XP\s0 only)
.PP
Math::Random::MT::Auto 6.22     \- Support for :SECURE mode
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This bundle includes all the modules used to test and support
Object::InsideOut.
.SH "CAVEATS"
.IX Header "CAVEATS"
For ActivePerl on Win \s-1XP\s0, if Win32::API doesn't install using \s-1CPAN\s0, then
try installing it using \s-1PPM:\s0
.PP
.Vb 1
\& ppm install Win32\-API
.Ve
.PP
Obviously, Win32::API will not install on all platforms \- just Windows and
Cygwin.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jerry D. Hedden, <jdhedden\ \s-1AT\s0\ cpan\ \s-1DOT\s0\ org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2006 \- 2012 Jerry D. Hedden. All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
