.\" Automatically generated by Pod::Man 2.26 (Pod::Simple 3.23)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GO::View 3"
.TH GO::View 3 "2007-07-20" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GO::View \- Creates a gif or png image for visualizing the GO DAG
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This perl module generates a graphic that displays the parent and child 
relationships of a selected \s-1GO\s0 term. It also provides the visualization 
for the GO::TermFinder perl module created by the Stanford Microarray 
Database (\s-1SMD\s0). This module is useful when analyzing experimental or 
computational results that produce a set of gene products that may have 
a common function or process.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use GO::View;
\&
\&    my $goView = 
\&
\&       GO::View\->new(\-goid               => $goid,
\&                     \-ontologyProvider   => $ontology,
\&                     \-annotationProvider => $annotation,
\&                     \-termFinder         => \e@pvalues,
\&                     \-aspect             => \*(AqP\*(Aq,
\&                     \-configFile         => $confFile,
\&                     \-imageDir           => "/tmp",
\&                     \-imageUrlRoot       => "http://www.ABC.com/tmp",
\&                     \-imageName          => "GOview.88.png",
\&                     \-tree               => \*(Aqup\*(Aq,
\&                     \-nodeUrl            => $goUrl,
\&                     \-geneUrl            => $geneUrl,
\&                     \-pvalueCutOff       => \*(Aq0.01\*(Aq,
\&                     \-imageLabel         => "SGD");
\&                                  
\&
\&    argument              required             expect data and type
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    \-goid                 No          A gene ontology ID (GOID).
\&                                      If nothing is passed in, the module 
\&                                      will use the top goid of each ontology 
\&                                      branch (i.e, goid for 
\&                                      molecular_function, biological_process,
\&                                      or cellular_component)
\&
\&    \-ontologyProvider     Yes         An ontology provider instance.
\&
\&    \-annotationProvider   No          An annotation provider instance. It is
\&                                      required for creating tree for GO Term
\&                                      Finder result.
\&    
\&    \-termFinder           No          An array of hash references returned 
\&                                      from \*(AqfindTerms\*(Aq method of 
\&                                      GO::TermFinder module. It is required
\&                                      for creating tree for GO Term Finder 
\&                                      result. 
\&
\&    \-aspect               No          <P|C|F>. The aspect of the ontology 
\&                                      provider. It is required for creating 
\&                                      tree for GO Term Finder result.
\&    
\&    \-configFile           Yes         The configuration file for setting the
\&                                      general variables for the graphic 
\&                                      display. 
\&                                  
\&    \-imageDir             Yes         The directory for storing the newly 
\&                                      created image file. It must be 
\&                                      world (nobody) readable and writable
\&                                      if you want to display the image to 
\&                                      the web.
\& 
\&    \-imageUrlRoot         No          The url root for the \-imageDir. It is
\&                                      required if you want to display the
\&                                      image to the web.
\&
\&    \-imageName            No          The image file name. By default, the 
\&                                      name will be something like 
\&                                      \*(AqGOview.xxxx.png\*(Aq. The \*(Aqxxxx\*(Aq will be
\&                                      the process id.  A suffix for the image (.png
\&                                      or .gif) should not be provided, as that will
\&                                      be determined at run time, depending on the
\&                                      capabilities of the GD library.
\&
\&    \-treeType             No          <up|down>. The tree type. 
\&                                      
\&                                      1. up   => display the ancestor tree 
\&                                                 for the given goid.
\&                                      2. down => display the descendant tree
\&                                                 for the given goid.
\&                                      By default, it will display the 
\&                                      descendant tree.
\&
\&    \-geneUrl              No          The URL for each Gene to link to.
\&                                      It needs to have the text <REPLACE_THIS> in 
\&                                      the url which will be substituted 
\&                                      by the real goid for a node.
\&
\&    \-nodeUrl              No          The url for each GO node to link to.
\&                                      It needs to have the text <REPLACE_THIS> in 
\&                                      the url which will be substituted 
\&                                      by the real goid for a node.
\&
\&    \-pvalueCutOff         No          The p\-value cutoff for displaying
\&                                      the graphic for GO Term Finder. 
\&                                      The default is 0.01
\&
\&    \-imageLabel           No          The image label which will appear at
\&                                      the left bottom corner of the map.
\&
\&    \-maxTopNodeToShow     No          This argument is used to limit the
\&                                      amount of the graph that might be
\&                                      shown, for the sake of reducing run\-
\&                                      time.  The default is 6.
\&
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&    To display the image on the web:
\&
\&         $goView\->showGraph;
\&    
\&    To create and return image file name with full path:
\&    
\&         my $imageFile = $goView\->createImage;
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Bug reports can be submitted via email
.PP
.Vb 1
\&  shuai@genome.stanford.edu
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Shuai Weng, shuai@genome.stanford.edu
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2003 Stanford University. All Rights Reserved.
This module is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the public methods.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 8
\& Title   : new
\& Function: Initializes the GO::View object. 
\&         : Recognized named parameters are \-goid, \-ontologyProvider,
\&           \-annotationProvider, \-termFinder, \-aspect, \-configFile, 
\&           \-imageDir, \-imageUrlRoot, \-imageName, \-treeType, \-nodeUrl, 
\&           \-imageLabel
\& Returns : a new object
\& Args    : named parameters
.Ve
.SS "graph"
.IX Subsection "graph"
.Vb 4
\& Title   : graph
\& Usage   : my $graph = $goView\->graph;
\& Function: Gets the newly created Graphviz instance.   
\& Returns : a new Graphviz instance.
.Ve
.SS "showGraph"
.IX Subsection "showGraph"
.Vb 5
\& Title   : showGraph
\& Usage   : $goView\->showGraph;
\& Function: Creates the image and print the map image to a file.  
\& Returns : the name of the file to which the image was written
\& Throws  : Exception if the imageUrlRoot is not passed to the object.
.Ve
.SS "imageFile"
.IX Subsection "imageFile"
.Vb 4
\& Title   : imageFile
\& Usage   : my $imageFile = $goView\->imageFile;
\& Function: Gets the newly created image file name (with full path).  
\& Returns : image file name.
.Ve
.SS "createImage"
.IX Subsection "createImage"
.Vb 6
\& Title   : createImage
\& Usage   : $goView\->createImage; 
\& Function: Creates the GO tree image file. Calls it only if you 
\&           want to create the image file only and do not want to
\&           display the image.  
\& Returns : The newly created image file name with full path.
.Ve
.SS "imageMap"
.IX Subsection "imageMap"
.Vb 5
\& Title    : imageMap
\& Usage    : my $map = $goView\->imageMap;
\& Function : returns the text that constitutes an image map for the
\&            created image.
\& Returns  : a string
.Ve
